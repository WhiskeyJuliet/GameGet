<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GameGet Result - <%= game.title %></title>
    <!-- System default font active --> <!-- Embed Google Link OR Local @font-face -->
    <style>
        /* Embedded Base Styles (Themes, :root, @font-face Removed) */
        /* === CSS Variables (Defaults - Light Theme) === */


/* === Dark Theme === */


/* === Purple Theme === */


/* === Hotdog Stand Theme === */



/* === Global Styles & Body (Using Variables) === */
*,
*::before,
*::after {
    box-sizing: border-box;
}

body {
    font-family: var(--body-font); /* Apply font variable */
    line-height: 1.6;
    max-width: 800px;
    margin: 20px auto 40px auto;
    padding: 0 15px;
    background-color: var(--bg-color);
    color: var(--text-color);
    transition: background-color 0.3s ease, color 0.3s ease; /* Smooth theme transition */
}

/* === Headings & Basic Text === */

/* Main Title Container */
.main-title-container {
    display: flex;
    flex-direction: column; /* Stack items vertically */
    align-items: center;   /* Center items horizontally */
    margin-bottom: 30px;   /* Space below the whole title block */
    gap: 5px;             /* Small gap between logo, h1, h3 */
}

/* Main Title Logo */
.main-title-logo {
    width: 128px;  /* Adjust desired logo display size (e.g., 80px) */
    height: 128px; /* Maintain aspect ratio or set specific height */
    object-fit: contain;
    margin-bottom: 10px; /* Add some space below the logo */
	margin-right: 6px; /* Optical alignment adjustment */
}

/* Adjust H1 styles */
h1 {
    text-align: center; /* Ensure H1 is centered */
    color: var(--text-color);
    margin-bottom: 0; /* Remove default margins */
    margin-top: 0;
    font-weight: 600;
    font-size: 2.5rem; /* Adjust size */
    line-height: 1.2;
}

h2 { /* Added for settings panel */
    margin-top: 0;
    margin-bottom: 20px;
    font-weight: 600;
    color: var(--text-color);
}

h3 {
    text-align: center; /* Ensure H3 is centered */
    color: var(--text-muted);
    margin-top: 0; /* Remove default margins */
    margin-bottom: 0;
    font-weight: 400;
    font-size: 1.1rem;
    line-height: 1.3;
}

p {
    margin-top: 0;
    margin-bottom: 6px;
}

a {
    color: var(--primary-color);
    text-decoration: none;
}

a:hover {
    text-decoration: underline;
    color: var(--primary-hover);
}

/* === Search Input Area === */
.search-container {
    display: flex;
    margin-bottom: 30px;
    gap: 10px;
}

#gameInput {
    flex-grow: 1;
    padding: 10px 12px;
    border: 1px solid var(--border-color);
    border-radius: 4px;
    font-size: 1rem;
    background-color: var(--element-bg); /* Input background */
    color: var(--text-color); /* Input text color */
    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}

#gameInput::placeholder { /* Style placeholder */
    color: var(--text-muted);
    opacity: 0.8;
}

#gameInput:focus {
    border-color: var(--primary-color);
    outline: 0;
    box-shadow: 0 0 0 0.2rem rgba(var(--primary-color-rgb, 0, 123, 255), 0.25); /* Needs RGB version of primary or fallback */
}

#searchButton {
    padding: 10px 20px;
    background-color: var(--primary-color);
    color: #ffffff; /* Assuming white text on primary buttons */
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 1rem;
    font-weight: 500;
    transition: background-color 0.2s ease, transform 0.1s ease;
}

#searchButton:hover {
    background-color: var(--primary-hover);
}

#searchButton:active {
    transform: scale(0.98);
}

#searchButton:disabled {
    background-color: var(--text-muted); /* Use muted color for disabled */
    cursor: not-allowed;
    opacity: 0.7;
}

/* === Results Area === */
#results {
    background-color: var(--element-bg);
    padding: 25px;
    border-radius: 5px;
    border: 1px solid var(--border-color);
    box-shadow: 0 4px 6px var(--shadow-color);
    min-height: 150px;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    transition: all 0.3s ease;
	margin-bottom: 20px; /* Add space below results, before button */
	position: relative; /* Needed for absolute positioning inside container*/
}

/* OBS Button Container Styles */
#obs-button-container {
    text-align: center; /* Center the button within the container */
    margin-bottom: 20px; /* Space below the button, before disclaimer */
    min-height: 50px; /* Give it some space even when empty */
}


/* Styles for the button itself */
#save-obs-button {
    display: inline-flex;
    align-items: center;
    gap: 10px;
    padding: 10px 18px;
    background-color: var(--primary-color);
    color: #ffffff;
    border: none;
    border-radius: 5px;
    cursor: pointer;
	font-family: inherit;
    font-size: 0.95rem;
    font-weight: 500;
    transition: background-color 0.2s ease, transform 0.1s ease;
}

#save-obs-button:hover {
	background-color: var(--primary-hover);
}

#save-obs-button:active {
	transform: scale(0.98);
}

#save-obs-button img { /* Keep icon styles */ }

/* Info & Error Messages */
.info-message {
    color: var(--text-muted);
    margin: 20px 0;
    font-size: 1rem;
}
.error-message {
    color: var(--error-color);
    font-weight: bold;
    margin: 20px 0;
    font-size: 1rem;
}

/* Loading Indicator */
.loading::after {
    content: ' Loading...';
    font-style: italic;
    color: var(--text-muted);
}

/* === Search Results List === */
.search-results-list {
    list-style: none;
    padding: 0;
    margin: 15px 0 0 0;
    width: 100%;
    text-align: left;
    max-height: 300px;
    overflow-y: auto;
    padding-right: 8px;
    scrollbar-width: thin; /* Firefox */
    scrollbar-color: var(--accent-darker) var(--accent-color); /* Firefox: thumb track */
}

/* Webkit scrollbar styling */
.search-results-list::-webkit-scrollbar {
    width: 8px;
}
.search-results-list::-webkit-scrollbar-track {
    background: var(--accent-color);
    border-radius: 4px;
}
.search-results-list::-webkit-scrollbar-thumb {
    background-color: var(--accent-darker);
    border-radius: 4px;
    border: 2px solid var(--accent-color);
}
.search-results-list::-webkit-scrollbar-thumb:hover {
    background-color: var(--text-muted);
}

.search-result-item {
    padding: 12px 15px;
    border: 1px solid var(--border-light);
    background-color: var(--element-bg);
    color: var(--text-color); /* Ensure text color inherits */
    margin-bottom: 10px;
    margin-right: 5px;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.2s ease, border-color 0.2s ease, transform 0.1s ease;
    font-size: 1em;
    display: flex;
    align-items: center;
	flex-wrap: wrap; /* Allows year/logos to drop below if needed */
    gap: 15px; /* Add gap between left and right */
}

.search-result-item:hover {
    background-color: var(--accent-color);
    border-color: var(--accent-darker);
    /*transform: translateY(-1px);*/
}

.result-item-left {
    display: flex; /* Change to flex row */
    align-items: baseline; /* Align text baselines */
    gap: 12px; /* Gap between title, type, logos */
    flex-grow: 1; /* Allow this section to take up most space */
    flex-shrink: 1; /* Allow shrinking */
    min-width: 0; /* Important for allowing shrinking */
}

.game-title {
 font-weight: 500;
    line-height: 1.3;
    margin-right: 0;
    white-space: nowrap; /* Prevent title itself from wrapping */
    overflow: hidden; /* Hide overflow */
    text-overflow: ellipsis; /* Add ... if title is too long */
    flex-shrink: 1; /* Allow title to shrink */
}

.game-type {
    display: inline-block; /* Allows background color and padding */
    font-size: 0.75em; /* Make it smaller */
    font-style: normal; /* Override potential parent italics */
    font-weight: 600; /* Make it slightly bolder */
    padding: 4px 5px 1px 6px; /* Add some padding */
    border-radius: 4px; /* Slightly rounded corners */
    line-height: 1.2; /* Adjust line height */
    margin-top: 0; /* Small space below title */
    /* Default background and text color (can be muted) */
	flex-shrink: 0;
    white-space: nowrap; /* Keep type on one line */
    background-color: var(--accent-color);
    color: var(--text-muted);
    border: 1px solid var(--border-light);
}

/* NEW: Specific Type Highlights */
.type-main-game { background-color: #007bff; color: #fff; border-color: #0056b3; }
.type-mod { background-color: #6c757d; color: #fff; border-color: #5a6268; }
.type-remaster { background-color: #1a6833; color: #fff; border-color: #124723; } /* Dark Green */
.type-remake { background-color: #28a745; color: #fff; border-color: #1e7e34; } /* Lighter Green */
.type-port, .type-version-port { background-color: #ffc107; color: #212529; border-color: #d39e00; } /* Yellow */
.type-expansion, .type-standalone-expansion, .type-expanded-game { background-color: #17a2b8; color: #fff; border-color: #117a8b; } /* Turquoise */
.type-bundle { background-color: #6f42c1; color: #fff; border-color: #5a32a3;} /* Purple */
.type-game, /* Default Game type, maybe use primary? */
.type-fork { background-color: var(--primary-color); color: #fff; border-color: var(--primary-hover); }
/* Add more rules if other types (DLC etc.) are included */

/* Dark Theme Overrides for Type Highlights (Ensure good contrast) */
body[data-theme="dark"] .type-main-game { background-color: #0d6efd; border-color: #0b5ed7;}
body[data-theme="dark"] .type-mod { background-color: #6c757d; border-color: #5a6268; }
body[data-theme="dark"] .type-remaster { background-color: #208344; border-color: #1a6833; }
body[data-theme="dark"] .type-remake { background-color: #2aaa4a; border-color: #28a745; }
body[data-theme="dark"] .type-port, body[data-theme="dark"] .type-version-port { background-color: #ffca2c; color: #212529; border-color: #ffc107; }
body[data-theme="dark"] .type-expansion, body[data-theme="dark"] .type-standalone-expansion, body[data-theme="dark"] .type-expanded-game { background-color: #20c9e0; border-color: #17a2b8; }
body[data-theme="dark"] .type-bundle { background-color: #8252d5; border-color: #6f42c1; }
body[data-theme="dark"] .type-game, body[data-theme="dark"] .type-fork { background-color: var(--primary-color); color: #fff; border-color: var(--primary-hover); }
/* Add overrides for other custom themes (purple, hotdogstand) if needed for contrast */

/* Container for Platform Logos in List */
.result-platform-logos {
/* Remove margin-top */
    margin-top: 0;
    display: flex; /* Keep logos in a row */
    flex-wrap: nowrap; /* Prevent logos wrapping by default */
    gap: 12px; /* Smaller gap between logos */
    /* --- Prevent logo container from shrinking initially --- */
    flex-shrink: 0;
    /* --- Hide overflow if too many logos --- */
    overflow: hidden;
}

/* Style for individual logos in the list */
.result-list-platform-logo {
    width: 16px;
    height: 16px;
    object-fit: contain;
    flex-shrink: 0;
	margin-right: 0.5em;
	margin-top:1px;
}

/* Right Container (Year) */
.result-item-right {
    flex-shrink: 0; /* Prevent year from shrinking */
    /* Remove padding-top if set */
    padding-top: 0;
    /* Add some left margin for clear separation */
    margin-left: auto; /* Push year to the far right */
}

.game-shortdate {
    font-size: 0.9em;
    color: var(--text-muted);
    white-space: nowrap;
}

/* === Game Details Display === */
.game-info {
    display: flex;
    gap: 25px;
    align-items: flex-start;
    text-align: left;
    width: 100%;
    margin-top: 0px;
}

.game-info > img {
    width: auto;
    height: auto;
    max-width: 24%;
    border: 1px solid var(--border-color);
    border-radius: 0px;
    box-shadow: 0 2px 4px var(--shadow-light);
    flex-shrink: 0;
    object-fit: cover;
    background-color: var(--accent-color); /* Add bg color for placeholders */
}

.game-details {
   flex-grow: 1;
}

.game-details h2 {
    margin-top: 0;
    margin-bottom: 5px;
    color: var(--text-color);
    font-size: 1.75rem;
    font-weight: 600;
}

.game-details p {
    /*margin: 8px 0;*/
    color: var(--text-color);
}

/* Style for Release Date (adjust margin if needed) */
.game-details p:has(> strong:contains("Release Date")) {
     margin-top: 0;
     margin-bottom: 0;
}

/* Style for Platforms Label */
.game-details p:has(> strong:contains("Platforms")) {
     margin-top: 0;
     margin-bottom: 8px;
}


.game-details strong {
    color: var(--text-muted); /* Ensure strong text matches main text */
    font-weight: 600;
	font-size: 1.25rem;
}

/* Platform Tags Styling */
.game-details ul {
    list-style: none;
    padding: 0;
    margin-top: 10px;
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
	align-items: flex-start;
}


/* Platform Tags Styling (Updated) */
.game-details ul {
    list-style: none;
    padding: 0;
    margin: 10px 0 0 0;
    display: flex; /* Still use flexbox for the container */
    flex-wrap: wrap; /* Allow tags to wrap */
    gap: 10px; /* Spacing between platform items */
}

/* Style for Developer */
.game-developer {
    font-size: 1.5em !important;
    color: var(--text-muted);
    margin-top: 0; /* Remove top margin */
    margin-bottom: 5px; /* Space below developer */
    font-style: italic;
}
.game-developer strong {
	font-size: 1.5rem !important;
    color: var(--text-muted);
    font-style: normal;
    font-weight: 600;
}

/* Rating Container Styles - Floating Top-Right */
#game-rating-container {      
    margin-top: 6px; /* Space below release date */
    margin-bottom: 10px; /* Space above platforms label/list */
    padding: 0; /* Vertical padding */
    /*border-top: 1px dashed var(--border-light);*/
    /*border-bottom: 1px dashed var(--border-light);*/
    min-height: auto;
    display: flex; /* Use flex to center content */
    justify-content: left;
    align-items: center;
    gap: 10px;
    
}

/* Ensure rating container is hidden correctly when off */
#game-rating-container:empty, /* Hide if empty */
body #game-rating-container.rating-off /* Hide if style is 'off' (JS will add this class) */
{
    display: none;
	margin: 0;
	padding: 0;
}


/* Star Rating Styles */
.rating-stars {
    font-size: 1.8em; /* Adjust star size */
    line-height: 1;
    cursor: pointer;
	white-space: nowrap;
	margin-top: 5px;
    margin-bottom: 6px;
}
.rating-stars span { /* Individual star */
    color: var(--accent-darker); /* Empty star color */
    transition: color 0.1s ease-in-out;
    margin: 0 1px;
}
.rating-stars span.filled,
.rating-stars:hover span.hover { /* Filled or hovered star */
    color: #ffc107; /* Gold color for filled/hover */
}
/* Make stars grey again after the hovered one */
.rating-stars:hover span.hover ~ span {
     /*color: var(--accent-darker);*/
}

/* Percent/Score Input Styles */
.rating-input-container {
    display: flex;
    align-items: center;
    gap: 5px;
}
.rating-input {
    padding: 4px 6px;
    font-size: 1.8em; 
    font-weight: bold;
    text-align: left;
    border-radius: 4px;
    background-color: var(--accent-color);
    color: var(--text-color);
	border: none;
	font-family: inherit;
}
/* Hide spinner buttons on number input (optional) */
.rating-input::-webkit-outer-spin-button,
.rating-input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
.rating-input[type=number] {
  -moz-appearance: textfield; /* Firefox */
}

/* Specific width for percent */
.rating-input-percent {
    width: 76px;
    text-align: center; /* Align right for percent */
    padding-right: 2px;
}

/* Specific width for score */
.rating-input-score {
    width: 98px;
    text-align: center;
}

.percent-sign {
    font-size: 1.4em; 
    font-weight: bold;
    color: var(--text-muted);
	text-align: left;
	margin-left: 2px;
}

/* Style for Score Label */
.score-label {
     font-size: 0.9em; /* Smaller label */
     color: var(--text-muted);
     margin-left: 2px; /* Small space after number */
}

/* Static rating display (for saved HTML) */
.static-rating {
    font-size: 1em;
    font-weight: bold;
    color: var(--text-color);
    /* Add any other desired styling */
}
.static-rating .stars { /* Style stars within static display */
     font-size: 1.2em; /* Match visual size */
     color: #ffc107; /* Gold */
     letter-spacing: 1px;
}
.static-rating .stars-empty {
    color: var(--accent-darker); /* Empty stars */
}

/* Style for EACH platform list item (<li>) */
.platform-item {
    background-color: var(--accent-color);
    color: var(--text-muted);
    padding: 5px 12px 5px 0px; /* Adjust padding as needed */
    border-radius: 4px; /* Adjust for desired shape */
    font-size: 1rem;
	font-weight: 600;
    line-height: 1.4;
    border: 1px solid var(--border-light);
    /* --- Use Flexbox to align icon and text --- */
    display: inline-flex; /* Changed from block-level flex on UL */
    align-items: center; /* Vertically center icon and text */
    gap: 6px; /* Space between icon and text */
}

/* Style for the platform logo image (<img>) */
.platform-logo {
    /* Use CSS Variable for size, fallback to 16px */
    width: var(--platform-logo-size, 16px);
    height: var(--platform-logo-size, 16px);
    object-fit: contain;
    flex-shrink: 0;
    max-width: none; /* Prevent override */
    max-height: none;/* Prevent override */
    /* Remove explicit width/height attributes set in JS later */
}

/* NEW: Class to hide the platform text */
.platform-text-hidden .platform-name-text { /* Target the span inside */
    display: none;
}

/* Optional: Adjust gap if text is hidden */
.platform-text-hidden {
    gap: 0; /* Remove gap when text is hidden */
}


/* === Store Links === */
.store-links-container {
    margin-top: 20px;
    padding-top: 15px;
    border-top: 1px solid var(--border-light);
    display: flex;
    flex-wrap: wrap;
    gap: 15px;
    justify-content: flex-start;
    min-height: 30px;
    transition: opacity 0.3s ease, height 0.3s ease; /* Add smooth transition */
}

body.store-links-hidden .store-links-container {
    display: none;
    /* Alternatively, use opacity and height for a fade effect: */
    /* opacity: 0; */
    /* height: 0; */
    /* min-height: 0; */
    /* overflow: hidden; */
    /* margin-top: 0; */
    /* padding-top: 0; */
    /* border-top: none; */
}

.store-button {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    padding: 8px 8px;
    border-radius: 4px;
    background-color: var(--accent-darker);
    color: var(--text-color);
    text-decoration: none;
    font-size: 0.9em;
    font-weight: 500;
    transition: background-color 0.2s ease, transform 0.1s ease;
    border: 1px solid transparent;
}

.store-button:hover {
    /*transform: translateY(-1px);*/
    box-shadow: 0 2px 4px var(--shadow-light);
    text-decoration: none;
	color: #ffffff;
}

.store-logo {
    width: 24px;
    height: 24px;
    object-fit: contain;
    flex-shrink: 0; /* Prevent logo from shrinking */
}

/* Store Button Styles */
.gog-button {
    background-color: #513968;
    color: #ffffff;
}
.gog-button:hover {
    background-color: #6e36a8;
}

.steam-button {
	background-color: #26323e; 
    color: #ffffff;
}
.steam-button:hover {
	background-color: #203b56;
}

.epic-games-button {
	background-color: #202024; 
    color: #ffffff;
}
.epic-games-button:hover {
	background-color: #404044;
}

/* Loading/Error messages within store container */
.store-loading, .store-error {
    width: 100%;
    text-align: left;
    margin: 5px 0;
    color: var(--text-muted); /* Use muted for loading */
    font-size: 0.9em;
}
.store-error {
    color: var(--error-color); /* Use error color */
} 

 
/* === Settings Cog & Panel === */
#settings-cog {
    position: fixed;
    top: 15px;
    right: 15px;
    background: var(--element-bg);
    /* color: var(--text-muted); /* Color no longer applies directly to img */
    border: 1px solid var(--border-color);
    border-radius: 50%;
    width: 40px;  /* Keep button size */
    height: 40px; /* Keep button size */
    padding: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    box-shadow: 0 2px 5px var(--shadow-color);
    z-index: 1001;
    transition: transform 0.2s ease; /* Keep hover transform, remove color transition */
}

/* Remove color change on hover, keep rotation */
#settings-cog:hover {
    /* color: var(--text-color); */
    transform: rotate(45deg);
}

/* Remove SVG specific rule if it existed */
/* #settings-cog svg { ... } */

/* --- Add styling for the image INSIDE the button --- */
#settings-cog img {
    display: block; /* Ensures image behaves like a block element */
    width: 24px;    /* Set desired image display width */
    height: 24px;   /* Set desired image display height */
    object-fit: contain; /* Scale image nicely if not perfectly square */
}
/* --- End image styling --- */


#settings-panel {
    position: fixed;
    top: 0;
    right: 0;
    width: 300px; /* Panel width */
    max-width: 90%;
    height: 100%;
    background-color: var(--element-bg);
    border-left: 1px solid var(--border-color);
    box-shadow: -5px 0 15px var(--shadow-color);
    padding: 20px;
    padding-top: 50px; /* Space for close button */
    z-index: 1000;
    overflow-y: auto;
    transform: translateX(100%); /* Start off-screen */
    transition: transform 0.3s ease-in-out;
    color: var(--text-color); /* Ensure text color inside panel matches theme */
}
    

#settings-panel.visible {
    transform: translateX(0); /* Slide in */
}

#settings-panel h2 {
	
}

#settings-close {
    position: absolute;
    top: 3px;
    right: 248px;
    background: none;
    border: none;
    font-size: 2rem;
    line-height: 1;
    color: var(--text-muted);
    cursor: pointer;
    padding: 0 5px;
}

#settings-close:hover {
    color: var(--text-color);
}

.settings-group {
    border: 1px solid var(--border-light);
    border-radius: 4px;
    padding: 15px;
    margin-bottom: 20px;
}

.settings-group legend {
    padding: 0 10px;
    font-weight: 600;
    color: var(--text-color);
}

/* Style for rows within settings groups */
.setting-row {
    display: flex;
    align-items: center;
    justify-content: flex-start; /* Align label and control */
    margin-bottom: 12px;
    gap: 15px; /* Space between label and control */
}
.setting-row label:first-child { /* Style the main label for the row */
     font-size: 0.95em;
     color: var(--text-muted);
     flex-shrink: 0; /* Prevent label from shrinking too much */
}
/* Ensure nested radio group labels are styled normally */
.setting-row .radio-group label {
    font-size: 1em; /* Reset font size */
    color: var(--text-color); /* Reset color */
    margin-bottom: 8px; /* Adjust spacing */
    display: block; /* Make rating style options stack vertically */
    margin-right: 0;
	text-align: left;
}
.setting-row .radio-group {
    text-align: left; /* Align radio options right */
    flex-grow: 1; /* Allow radio group to take space */
}




/* Style for number input */
.setting-row input[type="number"] {
    width: 60px; /* Fixed width */
    padding: 5px 8px;
    border: 1px solid var(--border-color);
    border-radius: 4px;
    background-color: var(--element-bg);
    color: var(--text-color);
    text-align: left;
}


/* Radio buttons and Select styling */
.radio-group label {
    display: block;
    margin-bottom: 10px;
    cursor: pointer;
}

.radio-group input[type="radio"] {
    margin-right: 8px;
    accent-color: var(--primary-color); /* Style radio button itself */
}

/* Style for Font Row */
.font-control-row {
    display: flex;
    align-items: center;
    gap: 10px;
}


#font-selector {
	flex-grow: 1;
    width: auto;
    padding: 8px 10px;
    border: 1px solid var(--border-color);
    border-radius: 4px;
    background-color: var(--element-bg);
    color: var(--text-color);
    font-size: 0.95rem;
    cursor: pointer;
}

#font-selector:focus {
    border-color: var(--primary-color);
    outline: 0;
    box-shadow: 0 0 0 0.2rem rgba(var(--primary-color-rgb, 0, 123, 255), 0.25);
}

#refresh-fonts-button {
    flex-shrink: 0; /* Prevent button from shrinking */
    padding: 6px 8px; /* Adjust padding */
    line-height: 1;
    background-color: var(--accent-color);
    border: 1px solid var(--border-color);
    color: var(--text-muted);
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.2s ease, color 0.2s ease;
}
#refresh-fonts-button:hover {
    background-color: var(--accent-darker);
    color: var(--text-color);
}

/* === Custom Color Editor Styles === */
#custom-color-editor {
    border-color: var(--primary-color); /* Highlight when active */
}

.custom-color-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); /* Responsive grid */
    gap: 15px;
    margin-bottom: 15px;
}

.color-input-group {
    display: flex;
    align-items: center;
    gap: 8px;
}

.color-input-group label {
    flex-basis: 100px; /* Fixed label width */
    flex-shrink: 0;
    font-size: 0.9em;
    text-align: right;
    color: var(--text-muted);
}

.color-input-group input[type="color"] {
    width: 35px;
    height: 30px;
    padding: 2px; /* Small padding */
    border: 1px solid var(--border-color);
    border-radius: 4px;
    cursor: pointer;
    background-color: var(--element-bg); /* Ensure background matches */
}
/* Remove default OS border/styles on color input */
.color-input-group input[type="color"]::-webkit-color-swatch-wrapper {
    padding: 0;
}
.color-input-group input[type="color"]::-webkit-color-swatch {
    border: none;
    border-radius: 3px;
}
/* Firefox */
.color-input-group input[type="color"]::-moz-color-swatch {
     border: none;
     border-radius: 3px;
}


.color-input-group .hex-input {
    width: 80px; /* Fixed width for hex */
    padding: 5px 8px;
    font-family: monospace;
    font-size: 0.9em;
    border: 1px solid var(--border-color);
    border-radius: 4px;
    background-color: var(--element-bg);
    color: var(--text-color);
    text-transform: uppercase;
}

#reset-custom-colors {
    display: block; /* Make it block */
    margin: 15px auto 0 auto; /* Center it */
    padding: 8px 15px;
    font-size: 0.9em;
    background-color: var(--text-muted);
    color: var(--bg-color); /* Contrast text */
    border: none;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.2s ease;
}
#reset-custom-colors:hover {
     background-color: var(--error-color); /* Use error color for reset? */
     color: #fff;
}

/* NEW: Styles for Import/Export Button Area */
.import-export-buttons {
    margin-top: 20px; /* Space above buttons */
    padding-top: 15px;
    border-top: 1px dashed var(--border-color); /* Dashed separator */
    display: flex;
    justify-content: space-around; /* Space out buttons */
    gap: 15px;
}

.import-export-buttons button {
    padding: 8px 12px;
    font-size: 0.9em;
    background-color: var(--accent-darker);
    color: var(--text-color);
    border: 1px solid var(--border-color);
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.2s ease, border-color 0.2s ease;
}

.import-export-buttons button:hover {
    background-color: var(--accent-color);
    border-color: var(--accent-darker);
}

/* === Disclaimer === */
.disclaimer {
    margin-top: 30px;
    font-size: 0.8em;
    color: var(--text-muted);
    text-align: center;
    border-top: 1px solid var(--border-color);
    padding-top: 15px;
}

.disclaimer a {
    color: var(--text-muted); /* Match surrounding text color */
}

/* === Disclaimer === */
.credits {
    font-size: 0.8em;
    color: var(--text-muted);
    text-align: center;

}

.credits a {
    color: var(--text-muted); /* Match surrounding text color */
	margin-right: 8px;
    box-shadow: 0 4px 6px var(--shadow-color);
}

        /* Inject Computed Variables into :root */
        :root {
    --bg-color: #212529;
    --element-bg: #343a40;
    --text-color: #f8f9fa;
    --text-muted: #adb5bd;
    --border-color: #495057;
    --border-light: #495057;
    --primary-color: #0d6efd;
    --primary-hover: #0b5ed7;
    --accent-color: #495057;
    --accent-darker: #6c757d;
    --error-color: #f86c7d;
    --body-font: 'pxSans', -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
    --platform-logo-size: 55px;

        }

        /* OBS Specific Overrides */
        body { position: relative; padding: 0;}
        #results { position: relative; border: none !important; box-shadow: none !important; padding: 10px !important; margin: 0 !important; }
        /* Hide interactive elements specifically for OBS */
        #results button, #results select, #results a:not(.store-button) { display: none !important; }
        #results .store-button { /* Ensure store buttons are visible if container wasn't removed */ display: inline-flex !important; }
		#game-rating-container { /* Ensure rating container is positioned */ display: block !important; background: none !important; box-shadow: none !important; border: none !important; margin: 10px 0 !important; padding: 5px 0 !important; font-size: 1em !important; z-index: auto; }
		#game-rating-container > * {  font-size: 1.8em !important; font-weight: bold; }
		#game-rating-container .static-rating .stars { font-size: 1em !important;  }
	</style>
    <% 
    // Got to import it this way so EJS can interpret it
    // --- Platform Logo Mapping Helper Function ---
    function getLogoPathForPlatform(platformName) {
        const nameLower = platformName.toLowerCase();
        const basePath = '../images/platforms/';
        // Add more specific cases first
    if (nameLower.includes('windows') || nameLower.includes('mswin')) {
            return basePath + 'windows.png';
        } else if (nameLower.includes('ms-dos') || nameLower.includes('dos')) {
            return basePath + 'dos.png';
        } else if (nameLower.includes('pc-98') || nameLower.includes('NEC PC-9800')) {
            return basePath + 'pc98.png';
        } else if (nameLower.includes('fmtowns') || nameLower.includes('fm towns')) {
            return basePath + 'fmtowns.png';
        } else if (nameLower.includes('pc')) { // General fallback for generic pc
            return basePath + 'pc.gif';
        } else if (nameLower.includes('playstation 5') || nameLower.includes('ps5')) {
            return basePath + 'ps5.png';
        } else if (nameLower.includes('playstation 4') || nameLower.includes('ps4')) {
            return basePath + 'ps4.png';
        } else if (nameLower.includes('playstation 3') || nameLower.includes('ps3')) {
            return basePath + 'ps3.png'; 
        } else if (nameLower.includes('playstation 2') || nameLower.includes('ps2')) {
            return basePath + 'ps2.png'; 
        } else if (nameLower.includes('playstation vita')) {
            return basePath + 'psvita.png';
        } else if (nameLower.includes('psp') || nameLower.includes('playstation portable')) {
            return basePath + 'psp.png';
        } else if (nameLower.includes('playstation') || nameLower.includes('psx') || nameLower.includes('ps1')) {
            return basePath + 'playstation.png';
        } else if (nameLower.includes('xbox series')) { // Catches X and S
            return basePath + 'xboxseriesx.png';
        } else if (nameLower.includes('xbox one')) {
            return basePath + 'xboxone.png';
        } else if (nameLower.includes('xbox 360')) {
            return basePath + 'xbox360.png'; 
        } else if (nameLower.includes('xbox')) { // General fallback for Xbox
            return basePath + 'xbox.png';
        } else if (nameLower.includes('switch')) {
            return basePath + 'switch.png';
        } else if (nameLower.includes('wii u')) {
            return basePath + 'wiiu.png';
        } else if (nameLower.includes('wii')) {
            return basePath + 'wii.png'; 
        } else if (nameLower.includes('nintendo 3ds')) {
            return basePath + '3ds.png'; 
        } else if (nameLower.includes('nintendo ds')) {
            return basePath + 'nds.png'; 
        } else if (nameLower.includes('gamecube') || nameLower.includes('ngc')) {
            return basePath + 'gamecube.png'; 
        } else if (nameLower.includes('nintendo 64') || nameLower.includes('n64')) {
            return basePath + 'n64.png'; 
        } else if (nameLower.includes('64DD') || nameLower.includes('Nintendo 64DD')) {
            return basePath + '64dd.png'; 
        } else if (nameLower.includes('snes') || nameLower.includes('super nintendo')) {
            return basePath + 'snes.png';
        } else if (nameLower.includes('super famicom') || nameLower.includes('SFC')) {
            return basePath + 'snes.png';
        } else if (nameLower.includes('sega mega drive') || nameLower.includes('sega genesis')) { 
            return basePath + 'md.png';			
        } else if (nameLower.includes('nintendo entertainment system') || nameLower.includes('nes')) {
            return basePath + 'nintendo.png'; 
        } else if (nameLower.includes('linux')) {
            return basePath + 'linux.png';
        } else if (nameLower.includes('mac') || nameLower.includes('macos')) {
            return basePath + 'mac.png';
        } else if (nameLower.includes('apple II') || nameLower.includes('apple IIe')) {
            return basePath + 'appleII.png';
        } else if (nameLower.includes('apple IIGS') || nameLower.includes('apple II GS')) {
            return basePath + 'appleIIgs.png';
        } else if (nameLower.includes('apple')) {
            return basePath + 'apple.png';
        } else if (nameLower.includes('android')) {
            return basePath + 'android.png';
        } else if (nameLower.includes('ios')) {
            return basePath + 'ios.png';
        } else if (nameLower.includes('stadia')) {
            return basePath + 'stadia.png';
        } else if (nameLower.includes('tapwave') || nameLower.includes('tapwave zodiac')) {
            return basePath + 'tapwave.png';
        } else if (nameLower.includes('atari 2600') || nameLower.includes('Atari VCS')) {
            return basePath + 'atari2600.png';
        } else if (nameLower.includes('atari 5200') || nameLower.includes('Atari 5200 SuperSystem')) {
            return basePath + 'atari5200.png';
        } else if (nameLower.includes('atari')) { // General fallback for atari
            return basePath + 'atari.png';
        } else if (nameLower.includes('amiga cd32')) { 
            return basePath + 'cd32.png';
        } else if (nameLower.includes('amiga') || nameLower.includes('Commodore Amiga')) { // General fallback for amiga
            return basePath + 'amiga.png';
        } else if (nameLower.includes('sega dreamcast') || nameLower.includes('dreamcast')) { 
            return basePath + 'dreamcast.png';
        } else if (nameLower.includes('master system') || nameLower.includes('sega master system')) { 
            return basePath + 'mastersystem.png';
        } else if (nameLower.includes('saturn') || nameLower.includes('sega saturn')) { 
            return basePath + 'saturn.png';
        } else if (nameLower.includes('32x') || nameLower.includes('sega 32x')) { 
            return basePath + 'sega32x.png';
        } else if (nameLower.includes('mega cd') || nameLower.includes('sega cd')) { 
            return basePath + 'segacd.png';
        } else if (nameLower.includes('stadia') || nameLower.includes('google stadia')) { 
            return basePath + 'stadia.png';
        } else if (nameLower.includes('gbc') || nameLower.includes('game boy color')) { 
            return basePath + 'gbc.png';
        } else if (nameLower.includes('gba') || nameLower.includes('game boy advance')) { 
            return basePath + 'gba.png';
        } else if (nameLower.includes('game boy') || nameLower.includes('gb')) { 
            return basePath + 'gameboy.png';
        } else if (nameLower.includes('3do') || nameLower.includes('3do interactive multiplayer')) { 
            return basePath + '3do.png';
        }
        // Add more mappings here for other consoles/platforms as needed...
    
        // Default fallback icon if no specific match is found
        console.warn(`No specific logo for platform: "${platformName}", using default.`);
        return basePath + 'default.png';
    }
%>
</head>
<body>
    <div id="results">
        <div class="game-info">
            <img src="<%= game.boxArt %>" alt="<%= game.title %> Box Art">
            <div class="game-details">
                <h2><%= game.title %></h2>
                <p class="game-developer">
                    <strong><%= game.developer %></strong>
                </p>
                <p>
                    <strong><%= game.releaseDate %></strong>
                </p>
                <% if (typeof game.rating === "object") { %>
                    <% if (game.rating.type === "stars") { %>
                        <div id="game-rating-container">
                            <div class="rating-stars">
                                <% for (let i = 0; i < Math.min(Math.floor(game.rating.value), 5); i++) { %>
                                    <span class="filled">★</span>
                                <% } %>
                                <% for (let i = game.rating.value; i < 5; i++) { %>
                                    <span>★</span>
                                <% } %>
                            </div>
                        </div>
                    <% } else if (game.rating.type === "percent") { %>
                        <div id="game-rating-container">
                            <div class="rating-input-container">
                                <%= game.rating.value %><span class="percent-sign">%</span>
                            </div>
                        </div>
                    <% } else if (game.rating.type === "score") { %>
                        <div id="game-rating-container">
                            <div class="rating-input-container">
                                <%= game.rating.value %><span class="score-label">Score</span>
                            </div>
                        </div>
                    <% } %>
                <% } %>
                <% if (game.platforms) { %>
                    <ul>
                        <% game.platforms.forEach(platform => { %>
                            <li class="platform-item">
                                <img src="<%= getLogoPathForPlatform(platform) %>" alt="<%= platform %> logo" class="platform-logo">
                                <span class="platform-name-text"><%= platform %></span>
                            </li>
                        <% }) %>
                    </ul>
                <% } %>
            </div>
        </div>
    </div>
</body>
</html>